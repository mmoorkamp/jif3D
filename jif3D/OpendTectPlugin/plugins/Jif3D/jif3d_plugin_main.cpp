/*
 * Jif3D OpendTect Plugin
 * See README.md for details
 *
 * Original source autogenerated by OpendTect 6.0.2
 * Modified by Ashley Davis (ad299) https://github.com/SgtCoDFish
 */

//static const char* rcsID mUsedVar = "$Id$";
#include "odplugin.h"
#include "uimsg.h"
#include "jif3dmod.h"
#include "jif3d_plugin_main.hpp"

#include "odplugin.h"
#include "uiodmain.h"
#include "uiodmenumgr.h"
#include "uimenu.h"
#include "uidialog.h"
#include "uigeninput.h"
#include "uistrings.h"

mDefODPluginInfo(Jif3D) {
	mDefineStaticLocalObject(PluginInfo, retpi,
	        ("Jif3D Plugin", "Jif3D", "Ashley Davis (https://github.com/SgtCoDFish)", "0.1",
	                "Plugin integrating Jif3D functionality with OpendTect.\nSee the README.md file for more details."));
	return &retpi;
}

// OK: we need an object to receive the CallBacks. In serious software,
// that may be a 'normal' object inheriting from CallBacker.

class Jif3DMain : public CallBacker {
mODTextTranslationClass(Jif3DMain)
public:
	Jif3DMain(uiODMain&);

	uiODMain& appl;
	void dispMsg(CallBacker*);
};

Jif3DMain::Jif3DMain(uiODMain& a) :
		        appl(a) {
	uiAction* newitem = new uiAction(m3Dots(tr("Jif3D Plugin")), mCB(this, Jif3DMain, dispMsg));
	appl.menuMgr().utilMnu()->insertItem(newitem);
}

class Jif3DMessageBringer : public uiDialog {
mODTextTranslationClass(Jif3DMessageBringer)

public:
	explicit Jif3DMessageBringer(uiParent *p);

	bool acceptOK(CallBacker*);

	uiGenInput* txtfld;
	uiGenInput* typfld;

};

Jif3DMessageBringer::Jif3DMessageBringer(uiParent* p) :
		        uiDialog(p, Setup("Jif3D OpendTect Plugin", "Use the Jif3D OpendTect Plugin",
		        mNoHelpKey))
		{
			txtfld = new uiGenInput( this, "Hello message",
			StringInpSpec("Hello world") );
			typfld = new uiGenInput( this, "Message type",
			BoolInpSpec(true,uiStrings::sInfo(),
					"Warning") );
			typfld->attach( alignedBelow, txtfld );
		}

bool Jif3DMessageBringer::acceptOK(CallBacker *) {
	const char* typedtxt = txtfld->text();
	if (!*typedtxt) {
		uiMSG().error(tr("Please type a message text"));
		return false;
	}
	if (typfld->getBoolValue())
		uiMSG().message(typedtxt);
	else
		uiMSG().warning(typedtxt);
	return true;
}

void Jif3DMain::dispMsg(CallBacker*) {
	Jif3DMessageBringer dlg(&appl);
	dlg.go();
}

mDefODInitPlugin(Jif3D) {
	mDefineStaticLocalObject(PtrMan<Jif3DMain>, theinst_, = 0);

	if (theinst_) {
		return "Unknown fatal error during initialisation";
	}

	theinst_ = new Jif3DMain(*ODMainWin());

	if (!theinst_) {
		return "Cannot instantiate Jif3D plugin";
	}

	return 0; // All OK - no error messages
}
